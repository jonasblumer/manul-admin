{"version":3,"sources":["../src/init_admin_server.js"],"names":["HARD_LIMIT","config","Meteor","ValidatedMethod","Counts","SimpleSchema","isAllowed","collections","createPublication","name","getPublications","list","edit","counts","collection","searchFields","transformFilter","publish","publishList","filter","searchTerm","sortProperties","userId","query","find","sort","limit","publishEdit","_id","createPublications","forEach"],"mappings":";;;;;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,aAAa,IAAnB;;AAEA;;kBAEe,gBAA2DC,MAA3D,EAAsE;AAAA,MAAnEC,MAAmE,QAAnEA,MAAmE;AAAA,MAA3DC,eAA2D,QAA3DA,eAA2D;AAAA,MAA1CC,MAA0C,QAA1CA,MAA0C;AAAA,+BAAlCC,YAAkC;AAAA,MAAlCA,YAAkC,qCAAnB,IAAmB;;AACnF,MAAMC,YAAY,0BAAUL,MAAV,CAAlB;AADmF,MAE3EM,WAF2E,GAE3DN,MAF2D,CAE3EM,WAF2E;;;AAInF,MAAMC,oBAAoB,SAApBA,iBAAoB,CAACC,IAAD,EAAU;AAAA,gCACH,4BAAiBC,eAAjB,CAAiCD,IAAjC,CADG;AAAA,QAC1BE,IAD0B,yBAC1BA,IAD0B;AAAA,QACpBC,IADoB,yBACpBA,IADoB;AAAA,QACdC,MADc,yBACdA,MADc;;AAAA,4BAEoBN,YAAYE,IAAZ,CAFpB;AAAA,QAE1BK,UAF0B,qBAE1BA,UAF0B;AAAA,QAEdC,YAFc,qBAEdA,YAFc;AAAA,QAEAC,eAFA,qBAEAA,eAFA;;AAIlC;;AACAd,WAAOe,OAAP,CAAeN,IAAf,EAAqB,SAASO,WAAT,CAAqBC,MAArB,EAAgE;AAAA,UAAnCC,UAAmC,uEAAtB,IAAsB;AAAA,UAAhBC,cAAgB;;AACnF,UAAIf,UAAUG,IAAV,EAAgB,KAAKa,MAArB,CAAJ,EAAkC;AAChC,YAAMC,QAAQ,gCACZJ,MADY,EACJC,cAAc,EAAEL,0BAAF,EAAgBK,sBAAhB,EADV,EACwCJ,eADxC,CAAd;AAGA;;AAEAZ,eAAOa,OAAP,CAAe,IAAf,EAAqBJ,MAArB,EAA6BC,WAAWU,IAAX,CAAgBD,KAAhB,CAA7B;AACA,YAAME,OAAO,uCAAqBJ,cAArB,CAAb;AACA,eAAOP,WAAWU,IAAX,CAAgBD,KAAhB,EAAuB,EAAEE,UAAF,EAAQC,OAAO1B,UAAf,EAAvB,CAAP;AACD;AACF,KAXD;AAYAE,WAAOe,OAAP,CAAeL,IAAf,EAAqB,SAASe,WAAT,CAAqBC,GAArB,EAA0B;AAC7C,UAAItB,UAAUG,IAAV,EAAgB,KAAKa,MAArB,CAAJ,EAAkC;AAChC,eAAOR,WAAWU,IAAX,CAAgBI,GAAhB,CAAP;AACD;AACF,KAJD;AAKD,GAtBD;AAuBA,MAAMC,qBAAqB,SAArBA,kBAAqB,GAAM;AAC/B,wBAAYtB,WAAZ,EAAyBuB,OAAzB,CAAiCtB,iBAAjC;AACD,GAFD;AAGAqB;AACA,gCAAc,EAAE3B,cAAF,EAAUC,gCAAV,EAA2BE,0BAA3B,EAAd,EAAyDJ,MAAzD;AACD,C","file":"init_admin_server.js","sourcesContent":["\nimport publicationUtils from './utils/publication_utils';\nimport createMethods from './create_methods';\nimport IsAllowed from './is_allowed';\nimport { filterToQuery, sortPropsToMongoSort } from './utils/query_utils';\n\nconst HARD_LIMIT = 1000;\n\n// SimpleSchema needs only to be passed, if its not in npm (version 2)\n\nexport default ({ Meteor, ValidatedMethod, Counts, SimpleSchema = null }, config) => {\n  const isAllowed = IsAllowed(config);\n  const { collections } = config;\n\n  const createPublication = (name) => {\n    const { list, edit, counts } = publicationUtils.getPublications(name);\n    const { collection, searchFields, transformFilter } = collections[name];\n\n    /* eslint meteor/audit-argument-checks: 0*/\n    Meteor.publish(list, function publishList(filter, searchTerm = null, sortProperties) {\n      if (isAllowed(name, this.userId)) {\n        const query = filterToQuery(\n          filter, searchTerm && { searchFields, searchTerm }, transformFilter,\n        );\n        // counts is always without limiting\n\n        Counts.publish(this, counts, collection.find(query));\n        const sort = sortPropsToMongoSort(sortProperties);\n        return collection.find(query, { sort, limit: HARD_LIMIT });\n      }\n    });\n    Meteor.publish(edit, function publishEdit(_id) {\n      if (isAllowed(name, this.userId)) {\n        return collection.find(_id);\n      }\n    });\n  };\n  const createPublications = () => {\n    Object.keys(collections).forEach(createPublication);\n  };\n  createPublications();\n  createMethods({ Meteor, ValidatedMethod, SimpleSchema }, config);\n};\n"]}