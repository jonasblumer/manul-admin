{"version":3,"sources":["../../src/hocs/with_list_documents.js"],"names":["composer","onData","context","publications","collection","collectionName","searchFields","sortCursor","filterProps","filter","transformFilter","sortPropertiesProps","sortProperties","searchTermProps","searchTerm","pagePropertiesProps","pageProperties","adminContext","Meteor","LocalState","Counts","get","docsLoaded","subscribe","list","ready","query","docs","find","fetch","recordCount","counts"],"mappings":";;;;;;;;;;;AACA;;AACA;;AACA;;;;AAGO,IAAMA,8BAAW,SAAXA,QAAW;AAAA,SAAM,gBAazBC,MAbyB,EAczB;AAAA,QAZDC,OAYC,QAZDA,OAYC;AAAA,QAXDC,YAWC,QAXDA,YAWC;AAAA,QAVDC,UAUC,QAVDA,UAUC;AAAA,QATDC,cASC,QATDA,cASC;AAAA,QARDC,YAQC,QARDA,YAQC;AAAA,+BAPDC,UAOC;AAAA,QAPDA,UAOC,mCAPY,KAOZ;AAAA,QANOC,WAMP,QANDC,MAMC;AAAA,QALDC,eAKC,QALDA,eAKC;AAAA,QAJeC,mBAIf,QAJDC,cAIC;AAAA,QAHWC,eAGX,QAHDC,UAGC;AAAA,QAFeC,mBAEf,QAFDC,cAEC;;AAAA,mBACsDd,SADtD;AAAA,yCACKe,YADL;AAAA,QACqBC,MADrB,yBACqBA,MADrB;AAAA,QAC6BC,UAD7B,yBAC6BA,UAD7B;AAAA,QACyCC,MADzC,yBACyCA,MADzC;;AAEH,QAAMX,SAASD,eAAeW,WAAWE,GAAX,CAAe,wCAAgBhB,cAAhB,CAAf,CAA9B;AACA,QAAMO,iBAAiBD,uBAAuBQ,WAAWE,GAAX,CAAe,sCAAchB,cAAd,CAAf,CAA9C;AACA,QAAMS,aAAaD,mBAAmBM,WAAWE,GAAX,CAAe,wCAAgBhB,cAAhB,CAAf,CAAtC;AACA,QAAMW,iBAAiBD,uBAAuBI,WAAWE,GAAX,CAAe,4CAAoBhB,cAApB,CAAf,CAA9C;AACA,QAAMiB,aAAaJ,OAAOK,SAAP,CAAiBpB,aAAaqB,IAA9B,EAAoCf,MAApC,EAA4CgB,KAA5C,EAAnB;AACA,QAAMC,QAAQ,gCAAcjB,MAAd,EAAsB,EAAEK,sBAAF,EAAcR,0BAAd,EAAtB,EAAoDI,eAApD,CAAd;AACA,QAAMiB,OAAOvB,WAAWwB,IAAX,CACXF,KADW,6BAELnB,cAAc,4CAA0B,EAAEK,8BAAF,EAAkBI,8BAAlB,EAA1B,CAFT,GAGXa,KAHW,EAAb;AAIA,QAAMC,cAAcV,OAAOC,GAAP,CAAWlB,aAAa4B,MAAxB,CAApB;AACA9B,WAAO,IAAP,EACE,EAAEqB,sBAAF,EAAcK,UAAd,EAAoBlB,cAApB,EAA4BK,sBAA5B,EAAwCF,8BAAxC,EAAwDI,8BAAxD,EAAwEc,wBAAxE,EADF;AAGD,GA9BuB;AAAA,CAAjB;;kBAiCQ;AAAA,SAAM,oCAAmB9B,UAAnB,CAAN;AAAA,C","file":"with_list_documents.js","sourcesContent":["\nimport { composeWithTracker } from 'mantra-core';\nimport { filterToQuery, gridOptionsToQueryOptions } from '../utils/query_utils';\nimport { stateListFilter, stateListSort, statePageProperties, stateListSearch } from '../utils/local_state_utils';\n\n\nexport const composer = () => (\n  {\n    context,\n    publications,\n    collection,\n    collectionName,\n    searchFields,\n    sortCursor = false,\n    filter: filterProps,\n    transformFilter,\n    sortProperties: sortPropertiesProps,\n    searchTerm: searchTermProps,\n    pageProperties: pagePropertiesProps,\n  }, onData,\n) => {\n  const { adminContext: { Meteor, LocalState, Counts } } = context();\n  const filter = filterProps || LocalState.get(stateListFilter(collectionName));\n  const sortProperties = sortPropertiesProps || LocalState.get(stateListSort(collectionName));\n  const searchTerm = searchTermProps || LocalState.get(stateListSearch(collectionName));\n  const pageProperties = pagePropertiesProps || LocalState.get(statePageProperties(collectionName));\n  const docsLoaded = Meteor.subscribe(publications.list, filter).ready();\n  const query = filterToQuery(filter, { searchTerm, searchFields }, transformFilter);\n  const docs = collection.find(\n    query,\n    { ...(sortCursor && gridOptionsToQueryOptions({ sortProperties, pageProperties })) },\n  ).fetch();\n  const recordCount = Counts.get(publications.counts);\n  onData(null,\n    { docsLoaded, docs, filter, searchTerm, sortProperties, pageProperties, recordCount },\n  );\n};\n\n\nexport default () => composeWithTracker(composer());\n"]}