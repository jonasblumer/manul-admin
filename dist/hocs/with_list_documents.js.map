{"version":3,"sources":["../../src/hocs/with_list_documents.js"],"names":["composer","onData","context","publications","collection","collectionName","searchFields","sortCursor","filterBase","filter","transformFilter","adminContext","Meteor","LocalState","Counts","filterLocal","get","sortProperties","searchTerm","pageProperties","docsLoaded","subscribe","list","ready","query","docs","find","fetch","recordCount","counts"],"mappings":";;;;;;;;;;;AACA;;AACA;;AACA;;;;AAGO,IAAMA,8BAAW,SAAXA,QAAW;AAAA,SAAM,gBAUzBC,MAVyB,EAWzB;AAAA,QATDC,OASC,QATDA,OASC;AAAA,QARDC,YAQC,QARDA,YAQC;AAAA,QAPDC,UAOC,QAPDA,UAOC;AAAA,QANDC,cAMC,QANDA,cAMC;AAAA,QALDC,YAKC,QALDA,YAKC;AAAA,+BAJDC,UAIC;AAAA,QAJDA,UAIC,mCAJY,KAIZ;AAAA,QAHOC,UAGP,QAHDC,MAGC;AAAA,QAFDC,eAEC,QAFDA,eAEC;;AAAA,mBACsDR,SADtD;AAAA,yCACKS,YADL;AAAA,QACqBC,MADrB,yBACqBA,MADrB;AAAA,QAC6BC,UAD7B,yBAC6BA,UAD7B;AAAA,QACyCC,MADzC,yBACyCA,MADzC;;AAEH,QAAMC,cAAcF,WAAWG,GAAX,CAAe,wCAAgBX,cAAhB,CAAf,CAApB;AACA,QAAMI,oCACDM,WADC,EAEDP,UAFC,CAAN;AAIA,QAAMS,iBAAiBJ,WAAWG,GAAX,CAAe,sCAAcX,cAAd,CAAf,CAAvB;AACA,QAAMa,aAAaL,WAAWG,GAAX,CAAe,wCAAgBX,cAAhB,CAAf,CAAnB;AACA,QAAMc,iBAAiBN,WAAWG,GAAX,CAAe,4CAAoBX,cAApB,CAAf,CAAvB;AACA,QAAMe,aAAaR,OAAOS,SAAP,CAAiBlB,aAAamB,IAA9B,EAAoCb,MAApC,EAA4Cc,KAA5C,EAAnB;AACA,QAAMC,QAAQ,gCAAcf,MAAd,EAAsB,EAAES,sBAAF,EAAcZ,0BAAd,EAAtB,EAAoDI,eAApD,CAAd;AACA,QAAMe,OAAOrB,WAAWsB,IAAX,CACXF,KADW,6BAELjB,cAAc,4CAA0B,EAAEU,8BAAF,EAAkBE,8BAAlB,EAA1B,CAFT,GAGXQ,KAHW,EAAb;AAIA,QAAMC,cAAcd,OAAOE,GAAP,CAAWb,aAAa0B,MAAxB,CAApB;AACA5B,WAAO,IAAP,EACE,EAAEmB,sBAAF,EAAcK,UAAd,EAAoBhB,cAApB,EAA4BS,sBAA5B,EAAwCD,8BAAxC,EAAwDE,8BAAxD,EAAwES,wBAAxE,EADF;AAGD,GA/BuB;AAAA,CAAjB;;kBAkCQ;AAAA,SAAM,oCAAmB5B,UAAnB,CAAN;AAAA,C","file":"with_list_documents.js","sourcesContent":["\nimport { composeWithTracker } from 'mantra-core';\nimport { filterToQuery, gridOptionsToQueryOptions } from '../utils/query_utils';\nimport { stateListFilter, stateListSort, statePageProperties, stateListSearch } from '../utils/local_state_utils';\n\n\nexport const composer = () => (\n  {\n    context,\n    publications,\n    collection,\n    collectionName,\n    searchFields,\n    sortCursor = false,\n    filter: filterBase,\n    transformFilter,\n  }, onData,\n) => {\n  const { adminContext: { Meteor, LocalState, Counts } } = context();\n  const filterLocal = LocalState.get(stateListFilter(collectionName));\n  const filter = {\n    ...filterLocal,\n    ...filterBase,\n  };\n  const sortProperties = LocalState.get(stateListSort(collectionName));\n  const searchTerm = LocalState.get(stateListSearch(collectionName));\n  const pageProperties = LocalState.get(statePageProperties(collectionName));\n  const docsLoaded = Meteor.subscribe(publications.list, filter).ready();\n  const query = filterToQuery(filter, { searchTerm, searchFields }, transformFilter);\n  const docs = collection.find(\n    query,\n    { ...(sortCursor && gridOptionsToQueryOptions({ sortProperties, pageProperties })) },\n  ).fetch();\n  const recordCount = Counts.get(publications.counts);\n  onData(null,\n    { docsLoaded, docs, filter, searchTerm, sortProperties, pageProperties, recordCount },\n  );\n};\n\n\nexport default () => composeWithTracker(composer());\n"]}