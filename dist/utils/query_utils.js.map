{"version":3,"sources":["../../src/utils/query_utils.js"],"names":["removeEmptyObjects","o","queryListFromTerm","term","transform","field","RegExp","queryForTerm","$or","fields","termToTermList","match","map","k","replace","createSearchQuery","terms","$and","filterToQuery","filter","search","transformFilter","f","query","searchFields","searchTerm","sortPropsToMongoSort","sortAscending","pagePropertiesToLimitAndSkip","currentPage","pageSize","limit","skip","gridOptionsToQueryOptions","sortProperties","pageProperties","sort","limitAndSkip"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAMA,qBAAqB,sBAAO;AAAA,SAAK,wBAASC,CAAT,KAAe,uBAAQA,CAAR,CAApB;AAAA,CAAP,CAA3B;;AAGA,IAAMC,oBAAoB,SAApBA,iBAAoB,CAACC,IAAD,EAAOC,SAAP;AAAA,SAAqB,oBAC7C,mBAAI;AAAA,6CACDC,KADC,EACO,IAAIC,MAAJ,OAAeF,UAAUD,IAAV,CAAf,CADP;AAAA,GAAJ,CAD6C,CAArB;AAAA,CAA1B;AAKA;AACA,IAAMI,eAAe,SAAfA,YAAe;AAAA,SAAQ;AAAA,WAC3B;AACEC,sDACKN,kBAAkBC,IAAlB,sBAAkCM,MAAlC,CADL,oCAEKP,kBAAkBC,IAAlB,wBAAoCM,MAApC,CAFL;AADF,KAD2B;AAAA,GAAR;AAAA,CAArB;AAQA,IAAMC,iBAAiB,SAAjBA,cAAiB;AAAA,SAAQP,KAAKQ,KAAL,CAAW,sBAAX,EAAmCC,GAAnC,CAAuC;AAAA,WAAKC,EAAEC,OAAF,CAAU,IAAV,EAAgB,EAAhB,CAAL;AAAA,GAAvC,EAAiEF,GAAjE,gBAAR;AAAA,CAAvB;AACO,IAAMG,gDAAoB,SAApBA,iBAAoB,CAACN,MAAD,EAASO,KAAT;AAAA,SAC/B;AACEC,UAAM,mBAAI;AAAA,aAAQV,aAAaJ,IAAb,EAAmBM,MAAnB,CAAR;AAAA,KAAJ,EAAwCO,KAAxC;AADR,GAD+B;AAAA,CAA1B;AAKP;AACO,IAAME,wCAAgB,SAAhBA,aAAgB,CAACC,MAAD,EAASC,MAAT,EAA8C;AAAA,MAA7BC,eAA6B,uEAAX;AAAA,WAAKC,CAAL;AAAA,GAAW;;AACzE;AACA;;AAEA;AACA,MAAMC,mCACD,CAAC,uBAAQJ,MAAR,CAAD,IAAoBnB,mBAAmBqB,gBAAgBF,MAAhB,CAAnB,CADnB,EAEA,CAAC,uBAAQC,MAAR,CAAD,IAAoB,CAAC,uBAAQA,OAAOI,YAAf,CAArB,IAAqD,CAAC,uBAAQJ,OAAOK,UAAf,CAAtD,IACFV,kBAAkBK,OAAOI,YAAzB,EAAuCd,eAAeU,OAAOK,UAAtB,CAAvC,CAHE,CAAN;AAMA,SAAOF,KAAP;AACD,CAZM;;AAcA,IAAMG,sDAAuB,oBAClC,qBAAM,IAAN,CADkC,EAElC,yBAAU;AAAA,MAAGC,aAAH,SAAGA,aAAH;AAAA,SAAwBA,gBAAgB,CAAhB,GAAoB,CAAC,CAA7C;AAAA,CAAV,CAFkC,CAA7B;;AAKP,IAAMC,+BAA+B,SAA/BA,4BAA+B;AAAA,kFACP,EAAEC,aAAa,CAAf,EAAkBC,UAAU,EAA5B,EADO;AAAA,MACjCD,WADiC,SACjCA,WADiC;AAAA,MACpBC,QADoB,SACpBA,QADoB;;AAAA,SAE/B;AACJC,WAAOD,QADH;AAEJE,UAAM,CAACH,cAAc,CAAf,IAAoBC;AAFtB,GAF+B;AAAA,CAArC;AAMO,IAAMG,gEAA4B,SAA5BA,yBAA4B,QAAwC;AAAA,MAArCC,cAAqC,SAArCA,cAAqC;AAAA,MAArBC,cAAqB,SAArBA,cAAqB;;AAC/E;AACA,MAAMC,OAAOV,qBAAqBQ,cAArB,CAAb;AACA;AACA,MAAMG,eAAeT,6BAA6BO,cAA7B,CAArB;AACA;AACEC;AADF,KAEKC,YAFL;AAID,CATM","file":"query_utils.js","sourcesContent":["\nimport { identity, capitalize, omitBy, map, isObject, mapValues, keyBy, isEmpty, flow, split, trim } from 'lodash/fp';\n\n\nconst removeEmptyObjects = omitBy(o => isObject(o) && isEmpty(o));\n\n\nconst queryListFromTerm = (term, transform) => flow(\n  map(field => ({\n    [field]: new RegExp(`^${transform(term)}`),\n  })),\n);\n// using case-insensitive regex makes it slow, so we do a little hack\nconst queryForTerm = term => fields => (\n  {\n    $or: [\n      ...queryListFromTerm(term, identity)(fields),\n      ...queryListFromTerm(term, capitalize)(fields),\n    ],\n  }\n);\nconst termToTermList = term => term.match(/\\w+|\"(?:\\\\\"|[^\"])+\"/g).map(k => k.replace(/\"/g, '')).map(trim);\nexport const createSearchQuery = (fields, terms) => (\n  {\n    $and: map(term => queryForTerm(term)(fields))(terms),\n  }\n);\n/* eslint import/prefer-default-export: 0 */\nexport const filterToQuery = (filter, search, transformFilter = f => f) => {\n  // console.log('got filter', filter);\n  // console.log('got search', search);\n\n  // remove empty objects on filter\n  const query = {\n    ...!isEmpty(filter) && removeEmptyObjects(transformFilter(filter)),\n    ...(!isEmpty(search) && !isEmpty(search.searchFields) && !isEmpty(search.searchTerm) && (\n      createSearchQuery(search.searchFields, termToTermList(search.searchTerm))\n    )),\n  };\n  return query;\n};\n\nexport const sortPropsToMongoSort = flow(\n  keyBy('id'),\n  mapValues(({ sortAscending }) => (sortAscending ? 1 : -1)),\n);\n\nconst pagePropertiesToLimitAndSkip = (\n  { currentPage, pageSize } = { currentPage: 1, pageSize: 10 },\n) => ({\n  limit: pageSize,\n  skip: (currentPage - 1) * pageSize,\n});\nexport const gridOptionsToQueryOptions = ({ sortProperties, pageProperties }) => {\n  // console.log('got sortProperties', sortProperties);\n  const sort = sortPropsToMongoSort(sortProperties);\n  // console.log('mongo sort', sort);\n  const limitAndSkip = pagePropertiesToLimitAndSkip(pageProperties);\n  return {\n    sort,\n    ...limitAndSkip,\n  };\n};\n"]}